// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMS.Web.Models;

#nullable disable

namespace SMS.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220312192040_createdb333")]
    partial class createdb333
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SMS.Web.Models.Entities.AcademicYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("YearTilte")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AcademicYears");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.Receiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcademicID_FK")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("StudentID_FK")
                        .HasColumnType("int");

                    b.Property<int>("TagID_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcademicID_FK");

                    b.HasIndex("StudentID_FK");

                    b.HasIndex("TagID_FK");

                    b.ToTable("Receivers");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.School", b =>
                {
                    b.Property<int>("SchoolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SchoolTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("SchoolID");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<int>("SchoolID_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("StudentBirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("StudentID");

                    b.HasIndex("SchoolID_FK");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.TagCard", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CartView")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TagID_HEX")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TagID");

                    b.ToTable("TagCards");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.tagrecive", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeRegister")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<int>("Delivery")
                        .HasColumnType("int");

                    b.Property<bool>("Dublicate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int>("StudentID_FK")
                        .HasColumnType("int");

                    b.Property<string>("TagID")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("TagID_FK")
                        .HasColumnType("int");

                    b.Property<bool>("sending")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("typeReg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("ID");

                    b.ToTable("tagrecive");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.Receiver", b =>
                {
                    b.HasOne("SMS.Web.Models.Entities.AcademicYear", "AcademicYear")
                        .WithMany("Receivers")
                        .HasForeignKey("AcademicID_FK")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SMS.Web.Models.Entities.Student", "Student")
                        .WithMany("Receivers")
                        .HasForeignKey("StudentID_FK")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SMS.Web.Models.Entities.TagCard", "TagCard")
                        .WithMany("Receivers")
                        .HasForeignKey("TagID_FK")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Student");

                    b.Navigation("TagCard");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.Student", b =>
                {
                    b.HasOne("SMS.Web.Models.Entities.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolID_FK")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.AcademicYear", b =>
                {
                    b.Navigation("Receivers");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.School", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.Student", b =>
                {
                    b.Navigation("Receivers");
                });

            modelBuilder.Entity("SMS.Web.Models.Entities.TagCard", b =>
                {
                    b.Navigation("Receivers");
                });
#pragma warning restore 612, 618
        }
    }
}
